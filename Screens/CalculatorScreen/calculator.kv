<CalculatorScreen>:

    MDBoxLayout:
        id: root_box
        orientation: "vertical"
        padding: "20dp"
        spacing: "15dp"

        MDBoxLayout:
            size_hint: 1, .3

            MDLabel:
                id: display
                text: " "
                font_size: "22sp"
                font_name: "assets/fonts/SamsungSans-Regular.ttf"
                halign: "right"
                markup: True
        
        MDSeparator:

        MDGridLayout:
            cols: 5
            rows: 6
            col_default_width: (root.width - root_box.padding[0] * 2 - self.spacing[0] * (self.cols - 1)) / self.cols
            col_force_default: True
            row_default_height: (self.height - self.spacing[1] * (self.rows - 1))  / self.rows
            row_force_default: True
            spacing: "20dp"

            Key:
                text: "C"
                text_color: "red"
                on_release: root.clear_display()
            Key:
                text: "sin"
                text_color: "blue"
                on_release: root.insert_value("sin(")
            Key:
                text: "cos"
                text_color: "blue"
                on_release: root.insert_value("cos(")
            Key:
                text: "tan"
                text_color: "blue"
                on_release: root.insert_value("tan(")
            MDFillRoundFlatIconButton:
                text: " "
                icon:
                    "assets/icons/del_button_active.png" if display.text != " " \
                    else "assets/icons/del_button_disabled.png"
                font_size: "18sp"
                md_bg_color: app.theme_cls.primary_light
                size_hint: 1, 1
                on_release: root.del_last_value()
            Key:
                text: "( )"
                text_color: "blue"
                on_release: root.insert_value(self.text)
            Key:
                text: "log"
                text_color: "blue"
                on_release: root.insert_value("log(")
            Key:
                text: "√"
                text_color: "blue"
                on_release: root.insert_value("sqrt(")
            Key:
                text: "^"
                text_color: "blue"
                on_release: root.insert_value("^(")
            Key:
                text: "÷"
                text_color: "blue"
                on_release: root.insert_value(self.text)
            Key:
                text: "e"
                on_release: root.insert_value(self.text)
            Key:
                text: "7"
                on_release: root.insert_value(self.text)
            Key:
                text: "8"
                on_release: root.insert_value(self.text)
            Key:
                text: "9"
                on_release: root.insert_value(self.text)
            Key:
                text: "×"
                text_color: "blue"
                on_release: root.insert_value(self.text)
            Key:
                text: "π"
                on_release: root.insert_value(self.text)
            Key:
                text: "4"
                on_release: root.insert_value(self.text)
            Key:
                text: "5"
                on_release: root.insert_value(self.text)
            Key:
                text: "6"
                on_release: root.insert_value(self.text)
            Key:
                text: "-"
                text_color: "blue"                
                on_release: root.insert_value(self.text)
            Key:
                text: "y"
                on_release: root.insert_value(self.text)
            Key:
                text: "1"
                on_release: root.insert_value(self.text)
            Key:
                text: "2"
                on_release: root.insert_value(self.text)
            Key:
                text: "3"
                on_release: root.insert_value(self.text)
            Key:
                text: "+"
                text_color: "blue"
                on_release: root.insert_value(self.text)
            Key:
                text: "x"
                on_release: root.insert_value(self.text)
            Key:
                text: "."
                on_release: root.insert_value(self.text)
            Key:
                text: "0"
                on_release: root.insert_value(self.text)
            Key:
                text: "Dx"
                text_color: "white"
                md_bg_color: app.theme_cls.accent_dark
                on_release: root.calculate(root.derivate)
            Key:
                text: "∫"
                text_color: "white"
                md_bg_color: app.theme_cls.accent_dark
                on_release: root.calculate(root.integrate)
